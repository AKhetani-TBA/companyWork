//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace ExcelAddIn5.Test_AppsWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentMarketDataVolOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentMarketDataPremOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentMarketDataStrikeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGridNodeIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitBeastCalcAutoUrlShareOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitLastOpenCalcOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastOpenCalcOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMainMenuCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubMenuCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubMenuCategoryVendorWiseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastOpenAppNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Excel_GetMainMenuCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Excel_GetSubMenuCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDirImgSIDNullOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateAuthTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddConnectionToDirForExcelOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableConnectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SharedAutoURL_ValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeastApps_SharedAutoURL_UpdateClickCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUserwithJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUserNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailForCustomAddInDisabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUser_New_UMOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoURL_Validate_User_InfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutUserForcefullyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLoginPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback Excel_GetXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestVersionIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestVersionSetupOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoURL_ValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoLoginByAuthTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExcelPackageLatestVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExcelPackageLatestVersionByVersionGUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExcelPackageLatestVersionByVersionGUIDAddinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExcelLatestVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExcelLatestVersionByVersionGUIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExcelLatestVersionByVersionGUIDForAddinOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCustomUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppGUIDByAddinNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectVersionMappingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAuthanticationTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductNameVersionByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRFQUserRoleOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::ExcelAddIn5.Properties.Settings.Default.ExcelAddIn5_Test_AppsWebService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetCurrentMarketDataVolCompletedEventHandler GetCurrentMarketDataVolCompleted;
        
        /// <remarks/>
        public event GetCurrentMarketDataPremCompletedEventHandler GetCurrentMarketDataPremCompleted;
        
        /// <remarks/>
        public event GetCurrentMarketDataStrikeCompletedEventHandler GetCurrentMarketDataStrikeCompleted;
        
        /// <remarks/>
        public event GetGridNodeIDsCompletedEventHandler GetGridNodeIDsCompleted;
        
        /// <remarks/>
        public event SubmitBeastCalcAutoUrlShareCompletedEventHandler SubmitBeastCalcAutoUrlShareCompleted;
        
        /// <remarks/>
        public event SubmitLastOpenCalcCompletedEventHandler SubmitLastOpenCalcCompleted;
        
        /// <remarks/>
        public event GetLastOpenCalcCompletedEventHandler GetLastOpenCalcCompleted;
        
        /// <remarks/>
        public event GetMainMenuCategoryCompletedEventHandler GetMainMenuCategoryCompleted;
        
        /// <remarks/>
        public event GetSubMenuCategoryCompletedEventHandler GetSubMenuCategoryCompleted;
        
        /// <remarks/>
        public event GetSubMenuCategoryVendorWiseCompletedEventHandler GetSubMenuCategoryVendorWiseCompleted;
        
        /// <remarks/>
        public event GetLastOpenAppNameCompletedEventHandler GetLastOpenAppNameCompleted;
        
        /// <remarks/>
        public event Excel_GetMainMenuCategoryCompletedEventHandler Excel_GetMainMenuCategoryCompleted;
        
        /// <remarks/>
        public event Excel_GetSubMenuCategoryCompletedEventHandler Excel_GetSubMenuCategoryCompleted;
        
        /// <remarks/>
        public event SetDirImgSIDNullCompletedEventHandler SetDirImgSIDNullCompleted;
        
        /// <remarks/>
        public event ValidateAuthTokenCompletedEventHandler ValidateAuthTokenCompleted;
        
        /// <remarks/>
        public event AddConnectionToDirForExcelCompletedEventHandler AddConnectionToDirForExcelCompleted;
        
        /// <remarks/>
        public event DisableTokenCompletedEventHandler DisableTokenCompleted;
        
        /// <remarks/>
        public event DisableConnectionCompletedEventHandler DisableConnectionCompleted;
        
        /// <remarks/>
        public event SharedAutoURL_ValidateCompletedEventHandler SharedAutoURL_ValidateCompleted;
        
        /// <remarks/>
        public event BeastApps_SharedAutoURL_UpdateClickCountCompletedEventHandler BeastApps_SharedAutoURL_UpdateClickCountCompleted;
        
        /// <remarks/>
        public event ValidateUserCompletedEventHandler ValidateUserCompleted;
        
        /// <remarks/>
        public event ValidateUserwithJSONCompletedEventHandler ValidateUserwithJSONCompleted;
        
        /// <remarks/>
        public event ValidateUserNewCompletedEventHandler ValidateUserNewCompleted;
        
        /// <remarks/>
        public event SendMailForCustomAddInDisabledCompletedEventHandler SendMailForCustomAddInDisabledCompleted;
        
        /// <remarks/>
        public event ValidateUser_New_UMCompletedEventHandler ValidateUser_New_UMCompleted;
        
        /// <remarks/>
        public event AutoURL_Validate_User_InfoCompletedEventHandler AutoURL_Validate_User_InfoCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event LogoutUserForcefullyCompletedEventHandler LogoutUserForcefullyCompleted;
        
        /// <remarks/>
        public event CheckLoginPolicyCompletedEventHandler CheckLoginPolicyCompleted;
        
        /// <remarks/>
        public event Excel_GetXmlCompletedEventHandler Excel_GetXmlCompleted;
        
        /// <remarks/>
        public event GetLatestVersionIDCompletedEventHandler GetLatestVersionIDCompleted;
        
        /// <remarks/>
        public event GetLatestVersionSetupCompletedEventHandler GetLatestVersionSetupCompleted;
        
        /// <remarks/>
        public event NotifyDownloadCompletedEventHandler NotifyDownloadCompleted;
        
        /// <remarks/>
        public event GetUserGroupsCompletedEventHandler GetUserGroupsCompleted;
        
        /// <remarks/>
        public event AutoURL_ValidateCompletedEventHandler AutoURL_ValidateCompleted;
        
        /// <remarks/>
        public event GetVendorIdCompletedEventHandler GetVendorIdCompleted;
        
        /// <remarks/>
        public event AutoLoginByAuthTicketCompletedEventHandler AutoLoginByAuthTicketCompleted;
        
        /// <remarks/>
        public event GetExcelPackageLatestVersionCompletedEventHandler GetExcelPackageLatestVersionCompleted;
        
        /// <remarks/>
        public event GetExcelPackageLatestVersionByVersionGUIDCompletedEventHandler GetExcelPackageLatestVersionByVersionGUIDCompleted;
        
        /// <remarks/>
        public event GetExcelPackageLatestVersionByVersionGUIDAddinCompletedEventHandler GetExcelPackageLatestVersionByVersionGUIDAddinCompleted;
        
        /// <remarks/>
        public event GetExcelLatestVersionCompletedEventHandler GetExcelLatestVersionCompleted;
        
        /// <remarks/>
        public event GetExcelLatestVersionByVersionGUIDCompletedEventHandler GetExcelLatestVersionByVersionGUIDCompleted;
        
        /// <remarks/>
        public event GetExcelLatestVersionByVersionGUIDForAddinCompletedEventHandler GetExcelLatestVersionByVersionGUIDForAddinCompleted;
        
        /// <remarks/>
        public event CheckCustomUpdateCompletedEventHandler CheckCustomUpdateCompleted;
        
        /// <remarks/>
        public event GetAppGUIDByAddinNameCompletedEventHandler GetAppGUIDByAddinNameCompleted;
        
        /// <remarks/>
        public event GetObjectVersionMappingsCompletedEventHandler GetObjectVersionMappingsCompleted;
        
        /// <remarks/>
        public event getAuthanticationTokenCompletedEventHandler getAuthanticationTokenCompleted;
        
        /// <remarks/>
        public event GetProductNameVersionByUserCompletedEventHandler GetProductNameVersionByUserCompleted;
        
        /// <remarks/>
        public event GetRFQUserRoleCompletedEventHandler GetRFQUserRoleCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentMarketDataVol", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentMarketDataVol(string UserID, string ProductID) {
            object[] results = this.Invoke("GetCurrentMarketDataVol", new object[] {
                        UserID,
                        ProductID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentMarketDataVolAsync(string UserID, string ProductID) {
            this.GetCurrentMarketDataVolAsync(UserID, ProductID, null);
        }
        
        /// <remarks/>
        public void GetCurrentMarketDataVolAsync(string UserID, string ProductID, object userState) {
            if ((this.GetCurrentMarketDataVolOperationCompleted == null)) {
                this.GetCurrentMarketDataVolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentMarketDataVolOperationCompleted);
            }
            this.InvokeAsync("GetCurrentMarketDataVol", new object[] {
                        UserID,
                        ProductID}, this.GetCurrentMarketDataVolOperationCompleted, userState);
        }
        
        private void OnGetCurrentMarketDataVolOperationCompleted(object arg) {
            if ((this.GetCurrentMarketDataVolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentMarketDataVolCompleted(this, new GetCurrentMarketDataVolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentMarketDataPrem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentMarketDataPrem() {
            object[] results = this.Invoke("GetCurrentMarketDataPrem", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentMarketDataPremAsync() {
            this.GetCurrentMarketDataPremAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentMarketDataPremAsync(object userState) {
            if ((this.GetCurrentMarketDataPremOperationCompleted == null)) {
                this.GetCurrentMarketDataPremOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentMarketDataPremOperationCompleted);
            }
            this.InvokeAsync("GetCurrentMarketDataPrem", new object[0], this.GetCurrentMarketDataPremOperationCompleted, userState);
        }
        
        private void OnGetCurrentMarketDataPremOperationCompleted(object arg) {
            if ((this.GetCurrentMarketDataPremCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentMarketDataPremCompleted(this, new GetCurrentMarketDataPremCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentMarketDataStrike", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrentMarketDataStrike() {
            object[] results = this.Invoke("GetCurrentMarketDataStrike", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentMarketDataStrikeAsync() {
            this.GetCurrentMarketDataStrikeAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentMarketDataStrikeAsync(object userState) {
            if ((this.GetCurrentMarketDataStrikeOperationCompleted == null)) {
                this.GetCurrentMarketDataStrikeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentMarketDataStrikeOperationCompleted);
            }
            this.InvokeAsync("GetCurrentMarketDataStrike", new object[0], this.GetCurrentMarketDataStrikeOperationCompleted, userState);
        }
        
        private void OnGetCurrentMarketDataStrikeOperationCompleted(object arg) {
            if ((this.GetCurrentMarketDataStrikeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentMarketDataStrikeCompleted(this, new GetCurrentMarketDataStrikeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGridNodeIDs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGridNodeIDs() {
            object[] results = this.Invoke("GetGridNodeIDs", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGridNodeIDsAsync() {
            this.GetGridNodeIDsAsync(null);
        }
        
        /// <remarks/>
        public void GetGridNodeIDsAsync(object userState) {
            if ((this.GetGridNodeIDsOperationCompleted == null)) {
                this.GetGridNodeIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGridNodeIDsOperationCompleted);
            }
            this.InvokeAsync("GetGridNodeIDs", new object[0], this.GetGridNodeIDsOperationCompleted, userState);
        }
        
        private void OnGetGridNodeIDsOperationCompleted(object arg) {
            if ((this.GetGridNodeIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGridNodeIDsCompleted(this, new GetGridNodeIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitBeastCalcAutoUrlShare", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SubmitBeastCalcAutoUrlShare(long pUserId, string pInstanceId, string pInstanceInfo, string pIpAddress, string pEmailIdList, string SenderEmail, string SenderMessage, string ClientType, string GUID, int expMinutes, bool isBulkShare) {
            object[] results = this.Invoke("SubmitBeastCalcAutoUrlShare", new object[] {
                        pUserId,
                        pInstanceId,
                        pInstanceInfo,
                        pIpAddress,
                        pEmailIdList,
                        SenderEmail,
                        SenderMessage,
                        ClientType,
                        GUID,
                        expMinutes,
                        isBulkShare});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitBeastCalcAutoUrlShareAsync(long pUserId, string pInstanceId, string pInstanceInfo, string pIpAddress, string pEmailIdList, string SenderEmail, string SenderMessage, string ClientType, string GUID, int expMinutes, bool isBulkShare) {
            this.SubmitBeastCalcAutoUrlShareAsync(pUserId, pInstanceId, pInstanceInfo, pIpAddress, pEmailIdList, SenderEmail, SenderMessage, ClientType, GUID, expMinutes, isBulkShare, null);
        }
        
        /// <remarks/>
        public void SubmitBeastCalcAutoUrlShareAsync(long pUserId, string pInstanceId, string pInstanceInfo, string pIpAddress, string pEmailIdList, string SenderEmail, string SenderMessage, string ClientType, string GUID, int expMinutes, bool isBulkShare, object userState) {
            if ((this.SubmitBeastCalcAutoUrlShareOperationCompleted == null)) {
                this.SubmitBeastCalcAutoUrlShareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitBeastCalcAutoUrlShareOperationCompleted);
            }
            this.InvokeAsync("SubmitBeastCalcAutoUrlShare", new object[] {
                        pUserId,
                        pInstanceId,
                        pInstanceInfo,
                        pIpAddress,
                        pEmailIdList,
                        SenderEmail,
                        SenderMessage,
                        ClientType,
                        GUID,
                        expMinutes,
                        isBulkShare}, this.SubmitBeastCalcAutoUrlShareOperationCompleted, userState);
        }
        
        private void OnSubmitBeastCalcAutoUrlShareOperationCompleted(object arg) {
            if ((this.SubmitBeastCalcAutoUrlShareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitBeastCalcAutoUrlShareCompleted(this, new SubmitBeastCalcAutoUrlShareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitLastOpenCalc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitLastOpenCalc(long pUserId, string pInstanceId, string pInstanceInfo) {
            this.Invoke("SubmitLastOpenCalc", new object[] {
                        pUserId,
                        pInstanceId,
                        pInstanceInfo});
        }
        
        /// <remarks/>
        public void SubmitLastOpenCalcAsync(long pUserId, string pInstanceId, string pInstanceInfo) {
            this.SubmitLastOpenCalcAsync(pUserId, pInstanceId, pInstanceInfo, null);
        }
        
        /// <remarks/>
        public void SubmitLastOpenCalcAsync(long pUserId, string pInstanceId, string pInstanceInfo, object userState) {
            if ((this.SubmitLastOpenCalcOperationCompleted == null)) {
                this.SubmitLastOpenCalcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitLastOpenCalcOperationCompleted);
            }
            this.InvokeAsync("SubmitLastOpenCalc", new object[] {
                        pUserId,
                        pInstanceId,
                        pInstanceInfo}, this.SubmitLastOpenCalcOperationCompleted, userState);
        }
        
        private void OnSubmitLastOpenCalcOperationCompleted(object arg) {
            if ((this.SubmitLastOpenCalcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitLastOpenCalcCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastOpenCalc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLastOpenCalc(string UserId, string ClientType, string GUID) {
            object[] results = this.Invoke("GetLastOpenCalc", new object[] {
                        UserId,
                        ClientType,
                        GUID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastOpenCalcAsync(string UserId, string ClientType, string GUID) {
            this.GetLastOpenCalcAsync(UserId, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void GetLastOpenCalcAsync(string UserId, string ClientType, string GUID, object userState) {
            if ((this.GetLastOpenCalcOperationCompleted == null)) {
                this.GetLastOpenCalcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastOpenCalcOperationCompleted);
            }
            this.InvokeAsync("GetLastOpenCalc", new object[] {
                        UserId,
                        ClientType,
                        GUID}, this.GetLastOpenCalcOperationCompleted, userState);
        }
        
        private void OnGetLastOpenCalcOperationCompleted(object arg) {
            if ((this.GetLastOpenCalcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastOpenCalcCompleted(this, new GetLastOpenCalcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMainMenuCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMainMenuCategory(string UserId, string ClientType, string GUID) {
            object[] results = this.Invoke("GetMainMenuCategory", new object[] {
                        UserId,
                        ClientType,
                        GUID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMainMenuCategoryAsync(string UserId, string ClientType, string GUID) {
            this.GetMainMenuCategoryAsync(UserId, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void GetMainMenuCategoryAsync(string UserId, string ClientType, string GUID, object userState) {
            if ((this.GetMainMenuCategoryOperationCompleted == null)) {
                this.GetMainMenuCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMainMenuCategoryOperationCompleted);
            }
            this.InvokeAsync("GetMainMenuCategory", new object[] {
                        UserId,
                        ClientType,
                        GUID}, this.GetMainMenuCategoryOperationCompleted, userState);
        }
        
        private void OnGetMainMenuCategoryOperationCompleted(object arg) {
            if ((this.GetMainMenuCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMainMenuCategoryCompleted(this, new GetMainMenuCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubMenuCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSubMenuCategory(string CategoryId, string UserId, string ClientType, string GUID) {
            object[] results = this.Invoke("GetSubMenuCategory", new object[] {
                        CategoryId,
                        UserId,
                        ClientType,
                        GUID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubMenuCategoryAsync(string CategoryId, string UserId, string ClientType, string GUID) {
            this.GetSubMenuCategoryAsync(CategoryId, UserId, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void GetSubMenuCategoryAsync(string CategoryId, string UserId, string ClientType, string GUID, object userState) {
            if ((this.GetSubMenuCategoryOperationCompleted == null)) {
                this.GetSubMenuCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubMenuCategoryOperationCompleted);
            }
            this.InvokeAsync("GetSubMenuCategory", new object[] {
                        CategoryId,
                        UserId,
                        ClientType,
                        GUID}, this.GetSubMenuCategoryOperationCompleted, userState);
        }
        
        private void OnGetSubMenuCategoryOperationCompleted(object arg) {
            if ((this.GetSubMenuCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubMenuCategoryCompleted(this, new GetSubMenuCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubMenuCategoryVendorWise", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSubMenuCategoryVendorWise(string VendorId, string UserId, string ClientType, string GUID) {
            object[] results = this.Invoke("GetSubMenuCategoryVendorWise", new object[] {
                        VendorId,
                        UserId,
                        ClientType,
                        GUID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSubMenuCategoryVendorWiseAsync(string VendorId, string UserId, string ClientType, string GUID) {
            this.GetSubMenuCategoryVendorWiseAsync(VendorId, UserId, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void GetSubMenuCategoryVendorWiseAsync(string VendorId, string UserId, string ClientType, string GUID, object userState) {
            if ((this.GetSubMenuCategoryVendorWiseOperationCompleted == null)) {
                this.GetSubMenuCategoryVendorWiseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubMenuCategoryVendorWiseOperationCompleted);
            }
            this.InvokeAsync("GetSubMenuCategoryVendorWise", new object[] {
                        VendorId,
                        UserId,
                        ClientType,
                        GUID}, this.GetSubMenuCategoryVendorWiseOperationCompleted, userState);
        }
        
        private void OnGetSubMenuCategoryVendorWiseOperationCompleted(object arg) {
            if ((this.GetSubMenuCategoryVendorWiseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubMenuCategoryVendorWiseCompleted(this, new GetSubMenuCategoryVendorWiseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastOpenAppName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLastOpenAppName(string InstanceId, string ClientType, string GUID, string UserId) {
            object[] results = this.Invoke("GetLastOpenAppName", new object[] {
                        InstanceId,
                        ClientType,
                        GUID,
                        UserId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastOpenAppNameAsync(string InstanceId, string ClientType, string GUID, string UserId) {
            this.GetLastOpenAppNameAsync(InstanceId, ClientType, GUID, UserId, null);
        }
        
        /// <remarks/>
        public void GetLastOpenAppNameAsync(string InstanceId, string ClientType, string GUID, string UserId, object userState) {
            if ((this.GetLastOpenAppNameOperationCompleted == null)) {
                this.GetLastOpenAppNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastOpenAppNameOperationCompleted);
            }
            this.InvokeAsync("GetLastOpenAppName", new object[] {
                        InstanceId,
                        ClientType,
                        GUID,
                        UserId}, this.GetLastOpenAppNameOperationCompleted, userState);
        }
        
        private void OnGetLastOpenAppNameOperationCompleted(object arg) {
            if ((this.GetLastOpenAppNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastOpenAppNameCompleted(this, new GetLastOpenAppNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Excel_GetMainMenuCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Excel_GetMainMenuCategory(string UserId, string ClientType, string GUID) {
            object[] results = this.Invoke("Excel_GetMainMenuCategory", new object[] {
                        UserId,
                        ClientType,
                        GUID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Excel_GetMainMenuCategoryAsync(string UserId, string ClientType, string GUID) {
            this.Excel_GetMainMenuCategoryAsync(UserId, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void Excel_GetMainMenuCategoryAsync(string UserId, string ClientType, string GUID, object userState) {
            if ((this.Excel_GetMainMenuCategoryOperationCompleted == null)) {
                this.Excel_GetMainMenuCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcel_GetMainMenuCategoryOperationCompleted);
            }
            this.InvokeAsync("Excel_GetMainMenuCategory", new object[] {
                        UserId,
                        ClientType,
                        GUID}, this.Excel_GetMainMenuCategoryOperationCompleted, userState);
        }
        
        private void OnExcel_GetMainMenuCategoryOperationCompleted(object arg) {
            if ((this.Excel_GetMainMenuCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Excel_GetMainMenuCategoryCompleted(this, new Excel_GetMainMenuCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Excel_GetSubMenuCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Excel_GetSubMenuCategory(string CategoryId, string UserId, string ClientType, string GUID) {
            object[] results = this.Invoke("Excel_GetSubMenuCategory", new object[] {
                        CategoryId,
                        UserId,
                        ClientType,
                        GUID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Excel_GetSubMenuCategoryAsync(string CategoryId, string UserId, string ClientType, string GUID) {
            this.Excel_GetSubMenuCategoryAsync(CategoryId, UserId, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void Excel_GetSubMenuCategoryAsync(string CategoryId, string UserId, string ClientType, string GUID, object userState) {
            if ((this.Excel_GetSubMenuCategoryOperationCompleted == null)) {
                this.Excel_GetSubMenuCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcel_GetSubMenuCategoryOperationCompleted);
            }
            this.InvokeAsync("Excel_GetSubMenuCategory", new object[] {
                        CategoryId,
                        UserId,
                        ClientType,
                        GUID}, this.Excel_GetSubMenuCategoryOperationCompleted, userState);
        }
        
        private void OnExcel_GetSubMenuCategoryOperationCompleted(object arg) {
            if ((this.Excel_GetSubMenuCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Excel_GetSubMenuCategoryCompleted(this, new Excel_GetSubMenuCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetDirImgSIDNull", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDirImgSIDNull() {
            this.Invoke("SetDirImgSIDNull", new object[0]);
        }
        
        /// <remarks/>
        public void SetDirImgSIDNullAsync() {
            this.SetDirImgSIDNullAsync(null);
        }
        
        /// <remarks/>
        public void SetDirImgSIDNullAsync(object userState) {
            if ((this.SetDirImgSIDNullOperationCompleted == null)) {
                this.SetDirImgSIDNullOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDirImgSIDNullOperationCompleted);
            }
            this.InvokeAsync("SetDirImgSIDNull", new object[0], this.SetDirImgSIDNullOperationCompleted, userState);
        }
        
        private void OnSetDirImgSIDNullOperationCompleted(object arg) {
            if ((this.SetDirImgSIDNullCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDirImgSIDNullCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateAuthToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ValidateAuthToken(string UserID, string ClientType, string GUID) {
            object[] results = this.Invoke("ValidateAuthToken", new object[] {
                        UserID,
                        ClientType,
                        GUID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAuthTokenAsync(string UserID, string ClientType, string GUID) {
            this.ValidateAuthTokenAsync(UserID, ClientType, GUID, null);
        }
        
        /// <remarks/>
        public void ValidateAuthTokenAsync(string UserID, string ClientType, string GUID, object userState) {
            if ((this.ValidateAuthTokenOperationCompleted == null)) {
                this.ValidateAuthTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAuthTokenOperationCompleted);
            }
            this.InvokeAsync("ValidateAuthToken", new object[] {
                        UserID,
                        ClientType,
                        GUID}, this.ValidateAuthTokenOperationCompleted, userState);
        }
        
        private void OnValidateAuthTokenOperationCompleted(object arg) {
            if ((this.ValidateAuthTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateAuthTokenCompleted(this, new ValidateAuthTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddConnectionToDirForExcel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddConnectionToDirForExcel(string strUserName, string strPass, string GUID, string[] ImageName) {
            object[] results = this.Invoke("AddConnectionToDirForExcel", new object[] {
                        strUserName,
                        strPass,
                        GUID,
                        ImageName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddConnectionToDirForExcelAsync(string strUserName, string strPass, string GUID, string[] ImageName) {
            this.AddConnectionToDirForExcelAsync(strUserName, strPass, GUID, ImageName, null);
        }
        
        /// <remarks/>
        public void AddConnectionToDirForExcelAsync(string strUserName, string strPass, string GUID, string[] ImageName, object userState) {
            if ((this.AddConnectionToDirForExcelOperationCompleted == null)) {
                this.AddConnectionToDirForExcelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddConnectionToDirForExcelOperationCompleted);
            }
            this.InvokeAsync("AddConnectionToDirForExcel", new object[] {
                        strUserName,
                        strPass,
                        GUID,
                        ImageName}, this.AddConnectionToDirForExcelOperationCompleted, userState);
        }
        
        private void OnAddConnectionToDirForExcelOperationCompleted(object arg) {
            if ((this.AddConnectionToDirForExcelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddConnectionToDirForExcelCompleted(this, new AddConnectionToDirForExcelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DisableToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DisableToken(string GUID, string userid, string ClientType) {
            object[] results = this.Invoke("DisableToken", new object[] {
                        GUID,
                        userid,
                        ClientType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DisableTokenAsync(string GUID, string userid, string ClientType) {
            this.DisableTokenAsync(GUID, userid, ClientType, null);
        }
        
        /// <remarks/>
        public void DisableTokenAsync(string GUID, string userid, string ClientType, object userState) {
            if ((this.DisableTokenOperationCompleted == null)) {
                this.DisableTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableTokenOperationCompleted);
            }
            this.InvokeAsync("DisableToken", new object[] {
                        GUID,
                        userid,
                        ClientType}, this.DisableTokenOperationCompleted, userState);
        }
        
        private void OnDisableTokenOperationCompleted(object arg) {
            if ((this.DisableTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableTokenCompleted(this, new DisableTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DisableConnection", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DisableConnection(string GUID, string userid, string ConnectionID) {
            object[] results = this.Invoke("DisableConnection", new object[] {
                        GUID,
                        userid,
                        ConnectionID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DisableConnectionAsync(string GUID, string userid, string ConnectionID) {
            this.DisableConnectionAsync(GUID, userid, ConnectionID, null);
        }
        
        /// <remarks/>
        public void DisableConnectionAsync(string GUID, string userid, string ConnectionID, object userState) {
            if ((this.DisableConnectionOperationCompleted == null)) {
                this.DisableConnectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableConnectionOperationCompleted);
            }
            this.InvokeAsync("DisableConnection", new object[] {
                        GUID,
                        userid,
                        ConnectionID}, this.DisableConnectionOperationCompleted, userState);
        }
        
        private void OnDisableConnectionOperationCompleted(object arg) {
            if ((this.DisableConnectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableConnectionCompleted(this, new DisableConnectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SharedAutoURL_Validate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SharedAutoURL_Validate(string RefID, string ClientType) {
            object[] results = this.Invoke("SharedAutoURL_Validate", new object[] {
                        RefID,
                        ClientType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SharedAutoURL_ValidateAsync(string RefID, string ClientType) {
            this.SharedAutoURL_ValidateAsync(RefID, ClientType, null);
        }
        
        /// <remarks/>
        public void SharedAutoURL_ValidateAsync(string RefID, string ClientType, object userState) {
            if ((this.SharedAutoURL_ValidateOperationCompleted == null)) {
                this.SharedAutoURL_ValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSharedAutoURL_ValidateOperationCompleted);
            }
            this.InvokeAsync("SharedAutoURL_Validate", new object[] {
                        RefID,
                        ClientType}, this.SharedAutoURL_ValidateOperationCompleted, userState);
        }
        
        private void OnSharedAutoURL_ValidateOperationCompleted(object arg) {
            if ((this.SharedAutoURL_ValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SharedAutoURL_ValidateCompleted(this, new SharedAutoURL_ValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BeastApps_SharedAutoURL_UpdateClickCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BeastApps_SharedAutoURL_UpdateClickCount(string pRefId) {
            this.Invoke("BeastApps_SharedAutoURL_UpdateClickCount", new object[] {
                        pRefId});
        }
        
        /// <remarks/>
        public void BeastApps_SharedAutoURL_UpdateClickCountAsync(string pRefId) {
            this.BeastApps_SharedAutoURL_UpdateClickCountAsync(pRefId, null);
        }
        
        /// <remarks/>
        public void BeastApps_SharedAutoURL_UpdateClickCountAsync(string pRefId, object userState) {
            if ((this.BeastApps_SharedAutoURL_UpdateClickCountOperationCompleted == null)) {
                this.BeastApps_SharedAutoURL_UpdateClickCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeastApps_SharedAutoURL_UpdateClickCountOperationCompleted);
            }
            this.InvokeAsync("BeastApps_SharedAutoURL_UpdateClickCount", new object[] {
                        pRefId}, this.BeastApps_SharedAutoURL_UpdateClickCountOperationCompleted, userState);
        }
        
        private void OnBeastApps_SharedAutoURL_UpdateClickCountOperationCompleted(object arg) {
            if ((this.BeastApps_SharedAutoURL_UpdateClickCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeastApps_SharedAutoURL_UpdateClickCountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ValidateUser(string strUserName, string strPass, string ClientType) {
            object[] results = this.Invoke("ValidateUser", new object[] {
                        strUserName,
                        strPass,
                        ClientType});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string strUserName, string strPass, string ClientType) {
            this.ValidateUserAsync(strUserName, strPass, ClientType, null);
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string strUserName, string strPass, string ClientType, object userState) {
            if ((this.ValidateUserOperationCompleted == null)) {
                this.ValidateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUserOperationCompleted);
            }
            this.InvokeAsync("ValidateUser", new object[] {
                        strUserName,
                        strPass,
                        ClientType}, this.ValidateUserOperationCompleted, userState);
        }
        
        private void OnValidateUserOperationCompleted(object arg) {
            if ((this.ValidateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUserCompleted(this, new ValidateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateUserwithJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateUserwithJSON(string userName, string pass, string clientType) {
            object[] results = this.Invoke("ValidateUserwithJSON", new object[] {
                        userName,
                        pass,
                        clientType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUserwithJSONAsync(string userName, string pass, string clientType) {
            this.ValidateUserwithJSONAsync(userName, pass, clientType, null);
        }
        
        /// <remarks/>
        public void ValidateUserwithJSONAsync(string userName, string pass, string clientType, object userState) {
            if ((this.ValidateUserwithJSONOperationCompleted == null)) {
                this.ValidateUserwithJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUserwithJSONOperationCompleted);
            }
            this.InvokeAsync("ValidateUserwithJSON", new object[] {
                        userName,
                        pass,
                        clientType}, this.ValidateUserwithJSONOperationCompleted, userState);
        }
        
        private void OnValidateUserwithJSONOperationCompleted(object arg) {
            if ((this.ValidateUserwithJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUserwithJSONCompleted(this, new ValidateUserwithJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateUserNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ValidateUserNew(string strUserName, string strPass, string ClientType, string ipAddress) {
            object[] results = this.Invoke("ValidateUserNew", new object[] {
                        strUserName,
                        strPass,
                        ClientType,
                        ipAddress});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUserNewAsync(string strUserName, string strPass, string ClientType, string ipAddress) {
            this.ValidateUserNewAsync(strUserName, strPass, ClientType, ipAddress, null);
        }
        
        /// <remarks/>
        public void ValidateUserNewAsync(string strUserName, string strPass, string ClientType, string ipAddress, object userState) {
            if ((this.ValidateUserNewOperationCompleted == null)) {
                this.ValidateUserNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUserNewOperationCompleted);
            }
            this.InvokeAsync("ValidateUserNew", new object[] {
                        strUserName,
                        strPass,
                        ClientType,
                        ipAddress}, this.ValidateUserNewOperationCompleted, userState);
        }
        
        private void OnValidateUserNewOperationCompleted(object arg) {
            if ((this.ValidateUserNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUserNewCompleted(this, new ValidateUserNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMailForCustomAddInDisabled", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMailForCustomAddInDisabled(string userName, string customAddInName) {
            this.Invoke("SendMailForCustomAddInDisabled", new object[] {
                        userName,
                        customAddInName});
        }
        
        /// <remarks/>
        public void SendMailForCustomAddInDisabledAsync(string userName, string customAddInName) {
            this.SendMailForCustomAddInDisabledAsync(userName, customAddInName, null);
        }
        
        /// <remarks/>
        public void SendMailForCustomAddInDisabledAsync(string userName, string customAddInName, object userState) {
            if ((this.SendMailForCustomAddInDisabledOperationCompleted == null)) {
                this.SendMailForCustomAddInDisabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailForCustomAddInDisabledOperationCompleted);
            }
            this.InvokeAsync("SendMailForCustomAddInDisabled", new object[] {
                        userName,
                        customAddInName}, this.SendMailForCustomAddInDisabledOperationCompleted, userState);
        }
        
        private void OnSendMailForCustomAddInDisabledOperationCompleted(object arg) {
            if ((this.SendMailForCustomAddInDisabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailForCustomAddInDisabledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateUser_New_UM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ValidateUser_New_UM(string strUserName, string strPass, string ClientType, string strAspSesionId, int ssId) {
            object[] results = this.Invoke("ValidateUser_New_UM", new object[] {
                        strUserName,
                        strPass,
                        ClientType,
                        strAspSesionId,
                        ssId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUser_New_UMAsync(string strUserName, string strPass, string ClientType, string strAspSesionId, int ssId) {
            this.ValidateUser_New_UMAsync(strUserName, strPass, ClientType, strAspSesionId, ssId, null);
        }
        
        /// <remarks/>
        public void ValidateUser_New_UMAsync(string strUserName, string strPass, string ClientType, string strAspSesionId, int ssId, object userState) {
            if ((this.ValidateUser_New_UMOperationCompleted == null)) {
                this.ValidateUser_New_UMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUser_New_UMOperationCompleted);
            }
            this.InvokeAsync("ValidateUser_New_UM", new object[] {
                        strUserName,
                        strPass,
                        ClientType,
                        strAspSesionId,
                        ssId}, this.ValidateUser_New_UMOperationCompleted, userState);
        }
        
        private void OnValidateUser_New_UMOperationCompleted(object arg) {
            if ((this.ValidateUser_New_UMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUser_New_UMCompleted(this, new ValidateUser_New_UMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoURL_Validate_User_Info", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet AutoURL_Validate_User_Info(string refNo, string UserHostAddress, int ApplicationCode, string ClientType) {
            object[] results = this.Invoke("AutoURL_Validate_User_Info", new object[] {
                        refNo,
                        UserHostAddress,
                        ApplicationCode,
                        ClientType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void AutoURL_Validate_User_InfoAsync(string refNo, string UserHostAddress, int ApplicationCode, string ClientType) {
            this.AutoURL_Validate_User_InfoAsync(refNo, UserHostAddress, ApplicationCode, ClientType, null);
        }
        
        /// <remarks/>
        public void AutoURL_Validate_User_InfoAsync(string refNo, string UserHostAddress, int ApplicationCode, string ClientType, object userState) {
            if ((this.AutoURL_Validate_User_InfoOperationCompleted == null)) {
                this.AutoURL_Validate_User_InfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoURL_Validate_User_InfoOperationCompleted);
            }
            this.InvokeAsync("AutoURL_Validate_User_Info", new object[] {
                        refNo,
                        UserHostAddress,
                        ApplicationCode,
                        ClientType}, this.AutoURL_Validate_User_InfoOperationCompleted, userState);
        }
        
        private void OnAutoURL_Validate_User_InfoOperationCompleted(object arg) {
            if ((this.AutoURL_Validate_User_InfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoURL_Validate_User_InfoCompleted(this, new AutoURL_Validate_User_InfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ChangePassword(long lUserId, string oldPassword, string newPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        lUserId,
                        oldPassword,
                        newPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(long lUserId, string oldPassword, string newPassword) {
            this.ChangePasswordAsync(lUserId, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(long lUserId, string oldPassword, string newPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        lUserId,
                        oldPassword,
                        newPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LogoutUserForcefully", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LogoutUserForcefully(string UserId) {
            object[] results = this.Invoke("LogoutUserForcefully", new object[] {
                        UserId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LogoutUserForcefullyAsync(string UserId) {
            this.LogoutUserForcefullyAsync(UserId, null);
        }
        
        /// <remarks/>
        public void LogoutUserForcefullyAsync(string UserId, object userState) {
            if ((this.LogoutUserForcefullyOperationCompleted == null)) {
                this.LogoutUserForcefullyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutUserForcefullyOperationCompleted);
            }
            this.InvokeAsync("LogoutUserForcefully", new object[] {
                        UserId}, this.LogoutUserForcefullyOperationCompleted, userState);
        }
        
        private void OnLogoutUserForcefullyOperationCompleted(object arg) {
            if ((this.LogoutUserForcefullyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutUserForcefullyCompleted(this, new LogoutUserForcefullyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckLoginPolicy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckLoginPolicy(string UserId, string ClientType) {
            object[] results = this.Invoke("CheckLoginPolicy", new object[] {
                        UserId,
                        ClientType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLoginPolicyAsync(string UserId, string ClientType) {
            this.CheckLoginPolicyAsync(UserId, ClientType, null);
        }
        
        /// <remarks/>
        public void CheckLoginPolicyAsync(string UserId, string ClientType, object userState) {
            if ((this.CheckLoginPolicyOperationCompleted == null)) {
                this.CheckLoginPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLoginPolicyOperationCompleted);
            }
            this.InvokeAsync("CheckLoginPolicy", new object[] {
                        UserId,
                        ClientType}, this.CheckLoginPolicyOperationCompleted, userState);
        }
        
        private void OnCheckLoginPolicyOperationCompleted(object arg) {
            if ((this.CheckLoginPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLoginPolicyCompleted(this, new CheckLoginPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Excel_GetXml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Excel_GetXml(string CalcID, string LastUpdatedDate) {
            object[] results = this.Invoke("Excel_GetXml", new object[] {
                        CalcID,
                        LastUpdatedDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Excel_GetXmlAsync(string CalcID, string LastUpdatedDate) {
            this.Excel_GetXmlAsync(CalcID, LastUpdatedDate, null);
        }
        
        /// <remarks/>
        public void Excel_GetXmlAsync(string CalcID, string LastUpdatedDate, object userState) {
            if ((this.Excel_GetXmlOperationCompleted == null)) {
                this.Excel_GetXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcel_GetXmlOperationCompleted);
            }
            this.InvokeAsync("Excel_GetXml", new object[] {
                        CalcID,
                        LastUpdatedDate}, this.Excel_GetXmlOperationCompleted, userState);
        }
        
        private void OnExcel_GetXmlOperationCompleted(object arg) {
            if ((this.Excel_GetXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Excel_GetXmlCompleted(this, new Excel_GetXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestVersionID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExeChunk GetLatestVersionID(string UserID, string ObjectID) {
            object[] results = this.Invoke("GetLatestVersionID", new object[] {
                        UserID,
                        ObjectID});
            return ((ExeChunk)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestVersionIDAsync(string UserID, string ObjectID) {
            this.GetLatestVersionIDAsync(UserID, ObjectID, null);
        }
        
        /// <remarks/>
        public void GetLatestVersionIDAsync(string UserID, string ObjectID, object userState) {
            if ((this.GetLatestVersionIDOperationCompleted == null)) {
                this.GetLatestVersionIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestVersionIDOperationCompleted);
            }
            this.InvokeAsync("GetLatestVersionID", new object[] {
                        UserID,
                        ObjectID}, this.GetLatestVersionIDOperationCompleted, userState);
        }
        
        private void OnGetLatestVersionIDOperationCompleted(object arg) {
            if ((this.GetLatestVersionIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestVersionIDCompleted(this, new GetLatestVersionIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestVersionSetup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExeChunk[] GetLatestVersionSetup(string UserID, string ObjectID) {
            object[] results = this.Invoke("GetLatestVersionSetup", new object[] {
                        UserID,
                        ObjectID});
            return ((ExeChunk[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestVersionSetupAsync(string UserID, string ObjectID) {
            this.GetLatestVersionSetupAsync(UserID, ObjectID, null);
        }
        
        /// <remarks/>
        public void GetLatestVersionSetupAsync(string UserID, string ObjectID, object userState) {
            if ((this.GetLatestVersionSetupOperationCompleted == null)) {
                this.GetLatestVersionSetupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestVersionSetupOperationCompleted);
            }
            this.InvokeAsync("GetLatestVersionSetup", new object[] {
                        UserID,
                        ObjectID}, this.GetLatestVersionSetupOperationCompleted, userState);
        }
        
        private void OnGetLatestVersionSetupOperationCompleted(object arg) {
            if ((this.GetLatestVersionSetupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestVersionSetupCompleted(this, new GetLatestVersionSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifyDownload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyDownload(string pExcelVersion, string pClientIp, string pInstallationInfoHtml) {
            this.Invoke("NotifyDownload", new object[] {
                        pExcelVersion,
                        pClientIp,
                        pInstallationInfoHtml});
        }
        
        /// <remarks/>
        public void NotifyDownloadAsync(string pExcelVersion, string pClientIp, string pInstallationInfoHtml) {
            this.NotifyDownloadAsync(pExcelVersion, pClientIp, pInstallationInfoHtml, null);
        }
        
        /// <remarks/>
        public void NotifyDownloadAsync(string pExcelVersion, string pClientIp, string pInstallationInfoHtml, object userState) {
            if ((this.NotifyDownloadOperationCompleted == null)) {
                this.NotifyDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyDownloadOperationCompleted);
            }
            this.InvokeAsync("NotifyDownload", new object[] {
                        pExcelVersion,
                        pClientIp,
                        pInstallationInfoHtml}, this.NotifyDownloadOperationCompleted, userState);
        }
        
        private void OnNotifyDownloadOperationCompleted(object arg) {
            if ((this.NotifyDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyDownloadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserGroups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserGroups(long UserId) {
            object[] results = this.Invoke("GetUserGroups", new object[] {
                        UserId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGroupsAsync(long UserId) {
            this.GetUserGroupsAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetUserGroupsAsync(long UserId, object userState) {
            if ((this.GetUserGroupsOperationCompleted == null)) {
                this.GetUserGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGroupsOperationCompleted);
            }
            this.InvokeAsync("GetUserGroups", new object[] {
                        UserId}, this.GetUserGroupsOperationCompleted, userState);
        }
        
        private void OnGetUserGroupsOperationCompleted(object arg) {
            if ((this.GetUserGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGroupsCompleted(this, new GetUserGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoURL_Validate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AutoURL_Validate(string userid, string ClientType) {
            object[] results = this.Invoke("AutoURL_Validate", new object[] {
                        userid,
                        ClientType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AutoURL_ValidateAsync(string userid, string ClientType) {
            this.AutoURL_ValidateAsync(userid, ClientType, null);
        }
        
        /// <remarks/>
        public void AutoURL_ValidateAsync(string userid, string ClientType, object userState) {
            if ((this.AutoURL_ValidateOperationCompleted == null)) {
                this.AutoURL_ValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoURL_ValidateOperationCompleted);
            }
            this.InvokeAsync("AutoURL_Validate", new object[] {
                        userid,
                        ClientType}, this.AutoURL_ValidateOperationCompleted, userState);
        }
        
        private void OnAutoURL_ValidateOperationCompleted(object arg) {
            if ((this.AutoURL_ValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoURL_ValidateCompleted(this, new AutoURL_ValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVendorId(string userid) {
            object[] results = this.Invoke("GetVendorId", new object[] {
                        userid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorIdAsync(string userid) {
            this.GetVendorIdAsync(userid, null);
        }
        
        /// <remarks/>
        public void GetVendorIdAsync(string userid, object userState) {
            if ((this.GetVendorIdOperationCompleted == null)) {
                this.GetVendorIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorIdOperationCompleted);
            }
            this.InvokeAsync("GetVendorId", new object[] {
                        userid}, this.GetVendorIdOperationCompleted, userState);
        }
        
        private void OnGetVendorIdOperationCompleted(object arg) {
            if ((this.GetVendorIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorIdCompleted(this, new GetVendorIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoLoginByAuthTicket", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AutoLoginByAuthTicket(string strUserId, string strAuthToken, string ClientType) {
            object[] results = this.Invoke("AutoLoginByAuthTicket", new object[] {
                        strUserId,
                        strAuthToken,
                        ClientType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AutoLoginByAuthTicketAsync(string strUserId, string strAuthToken, string ClientType) {
            this.AutoLoginByAuthTicketAsync(strUserId, strAuthToken, ClientType, null);
        }
        
        /// <remarks/>
        public void AutoLoginByAuthTicketAsync(string strUserId, string strAuthToken, string ClientType, object userState) {
            if ((this.AutoLoginByAuthTicketOperationCompleted == null)) {
                this.AutoLoginByAuthTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoLoginByAuthTicketOperationCompleted);
            }
            this.InvokeAsync("AutoLoginByAuthTicket", new object[] {
                        strUserId,
                        strAuthToken,
                        ClientType}, this.AutoLoginByAuthTicketOperationCompleted, userState);
        }
        
        private void OnAutoLoginByAuthTicketOperationCompleted(object arg) {
            if ((this.AutoLoginByAuthTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoLoginByAuthTicketCompleted(this, new AutoLoginByAuthTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExcelPackageLatestVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExcelVersionMappings[] GetExcelPackageLatestVersion(bool active) {
            object[] results = this.Invoke("GetExcelPackageLatestVersion", new object[] {
                        active});
            return ((ExcelVersionMappings[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExcelPackageLatestVersionAsync(bool active) {
            this.GetExcelPackageLatestVersionAsync(active, null);
        }
        
        /// <remarks/>
        public void GetExcelPackageLatestVersionAsync(bool active, object userState) {
            if ((this.GetExcelPackageLatestVersionOperationCompleted == null)) {
                this.GetExcelPackageLatestVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExcelPackageLatestVersionOperationCompleted);
            }
            this.InvokeAsync("GetExcelPackageLatestVersion", new object[] {
                        active}, this.GetExcelPackageLatestVersionOperationCompleted, userState);
        }
        
        private void OnGetExcelPackageLatestVersionOperationCompleted(object arg) {
            if ((this.GetExcelPackageLatestVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExcelPackageLatestVersionCompleted(this, new GetExcelPackageLatestVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExcelPackageLatestVersionByVersionGUID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExcelVersionMappings[] GetExcelPackageLatestVersionByVersionGUID(int versionNumber, string appGUID) {
            object[] results = this.Invoke("GetExcelPackageLatestVersionByVersionGUID", new object[] {
                        versionNumber,
                        appGUID});
            return ((ExcelVersionMappings[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExcelPackageLatestVersionByVersionGUIDAsync(int versionNumber, string appGUID) {
            this.GetExcelPackageLatestVersionByVersionGUIDAsync(versionNumber, appGUID, null);
        }
        
        /// <remarks/>
        public void GetExcelPackageLatestVersionByVersionGUIDAsync(int versionNumber, string appGUID, object userState) {
            if ((this.GetExcelPackageLatestVersionByVersionGUIDOperationCompleted == null)) {
                this.GetExcelPackageLatestVersionByVersionGUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExcelPackageLatestVersionByVersionGUIDOperationCompleted);
            }
            this.InvokeAsync("GetExcelPackageLatestVersionByVersionGUID", new object[] {
                        versionNumber,
                        appGUID}, this.GetExcelPackageLatestVersionByVersionGUIDOperationCompleted, userState);
        }
        
        private void OnGetExcelPackageLatestVersionByVersionGUIDOperationCompleted(object arg) {
            if ((this.GetExcelPackageLatestVersionByVersionGUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExcelPackageLatestVersionByVersionGUIDCompleted(this, new GetExcelPackageLatestVersionByVersionGUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExcelPackageLatestVersionByVersionGUIDAddin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExcelVersionMappings[] GetExcelPackageLatestVersionByVersionGUIDAddin(int versionNumber, string appGUID) {
            object[] results = this.Invoke("GetExcelPackageLatestVersionByVersionGUIDAddin", new object[] {
                        versionNumber,
                        appGUID});
            return ((ExcelVersionMappings[])(results[0]));
        }
        
        /// <remarks/>
        public void GetExcelPackageLatestVersionByVersionGUIDAddinAsync(int versionNumber, string appGUID) {
            this.GetExcelPackageLatestVersionByVersionGUIDAddinAsync(versionNumber, appGUID, null);
        }
        
        /// <remarks/>
        public void GetExcelPackageLatestVersionByVersionGUIDAddinAsync(int versionNumber, string appGUID, object userState) {
            if ((this.GetExcelPackageLatestVersionByVersionGUIDAddinOperationCompleted == null)) {
                this.GetExcelPackageLatestVersionByVersionGUIDAddinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExcelPackageLatestVersionByVersionGUIDAddinOperationCompleted);
            }
            this.InvokeAsync("GetExcelPackageLatestVersionByVersionGUIDAddin", new object[] {
                        versionNumber,
                        appGUID}, this.GetExcelPackageLatestVersionByVersionGUIDAddinOperationCompleted, userState);
        }
        
        private void OnGetExcelPackageLatestVersionByVersionGUIDAddinOperationCompleted(object arg) {
            if ((this.GetExcelPackageLatestVersionByVersionGUIDAddinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExcelPackageLatestVersionByVersionGUIDAddinCompleted(this, new GetExcelPackageLatestVersionByVersionGUIDAddinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExcelLatestVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExcelVersionMappings GetExcelLatestVersion(bool active) {
            object[] results = this.Invoke("GetExcelLatestVersion", new object[] {
                        active});
            return ((ExcelVersionMappings)(results[0]));
        }
        
        /// <remarks/>
        public void GetExcelLatestVersionAsync(bool active) {
            this.GetExcelLatestVersionAsync(active, null);
        }
        
        /// <remarks/>
        public void GetExcelLatestVersionAsync(bool active, object userState) {
            if ((this.GetExcelLatestVersionOperationCompleted == null)) {
                this.GetExcelLatestVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExcelLatestVersionOperationCompleted);
            }
            this.InvokeAsync("GetExcelLatestVersion", new object[] {
                        active}, this.GetExcelLatestVersionOperationCompleted, userState);
        }
        
        private void OnGetExcelLatestVersionOperationCompleted(object arg) {
            if ((this.GetExcelLatestVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExcelLatestVersionCompleted(this, new GetExcelLatestVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExcelLatestVersionByVersionGUID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExcelVersionMappings GetExcelLatestVersionByVersionGUID(int versionNumber, string appGUID) {
            object[] results = this.Invoke("GetExcelLatestVersionByVersionGUID", new object[] {
                        versionNumber,
                        appGUID});
            return ((ExcelVersionMappings)(results[0]));
        }
        
        /// <remarks/>
        public void GetExcelLatestVersionByVersionGUIDAsync(int versionNumber, string appGUID) {
            this.GetExcelLatestVersionByVersionGUIDAsync(versionNumber, appGUID, null);
        }
        
        /// <remarks/>
        public void GetExcelLatestVersionByVersionGUIDAsync(int versionNumber, string appGUID, object userState) {
            if ((this.GetExcelLatestVersionByVersionGUIDOperationCompleted == null)) {
                this.GetExcelLatestVersionByVersionGUIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExcelLatestVersionByVersionGUIDOperationCompleted);
            }
            this.InvokeAsync("GetExcelLatestVersionByVersionGUID", new object[] {
                        versionNumber,
                        appGUID}, this.GetExcelLatestVersionByVersionGUIDOperationCompleted, userState);
        }
        
        private void OnGetExcelLatestVersionByVersionGUIDOperationCompleted(object arg) {
            if ((this.GetExcelLatestVersionByVersionGUIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExcelLatestVersionByVersionGUIDCompleted(this, new GetExcelLatestVersionByVersionGUIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExcelLatestVersionByVersionGUIDForAddin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExcelVersionMappings GetExcelLatestVersionByVersionGUIDForAddin(int versionNumber, string appGUID) {
            object[] results = this.Invoke("GetExcelLatestVersionByVersionGUIDForAddin", new object[] {
                        versionNumber,
                        appGUID});
            return ((ExcelVersionMappings)(results[0]));
        }
        
        /// <remarks/>
        public void GetExcelLatestVersionByVersionGUIDForAddinAsync(int versionNumber, string appGUID) {
            this.GetExcelLatestVersionByVersionGUIDForAddinAsync(versionNumber, appGUID, null);
        }
        
        /// <remarks/>
        public void GetExcelLatestVersionByVersionGUIDForAddinAsync(int versionNumber, string appGUID, object userState) {
            if ((this.GetExcelLatestVersionByVersionGUIDForAddinOperationCompleted == null)) {
                this.GetExcelLatestVersionByVersionGUIDForAddinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExcelLatestVersionByVersionGUIDForAddinOperationCompleted);
            }
            this.InvokeAsync("GetExcelLatestVersionByVersionGUIDForAddin", new object[] {
                        versionNumber,
                        appGUID}, this.GetExcelLatestVersionByVersionGUIDForAddinOperationCompleted, userState);
        }
        
        private void OnGetExcelLatestVersionByVersionGUIDForAddinOperationCompleted(object arg) {
            if ((this.GetExcelLatestVersionByVersionGUIDForAddinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExcelLatestVersionByVersionGUIDForAddinCompleted(this, new GetExcelLatestVersionByVersionGUIDForAddinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckCustomUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExcelVersionMappings CheckCustomUpdate(int versionNumber, string appGUID) {
            object[] results = this.Invoke("CheckCustomUpdate", new object[] {
                        versionNumber,
                        appGUID});
            return ((ExcelVersionMappings)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCustomUpdateAsync(int versionNumber, string appGUID) {
            this.CheckCustomUpdateAsync(versionNumber, appGUID, null);
        }
        
        /// <remarks/>
        public void CheckCustomUpdateAsync(int versionNumber, string appGUID, object userState) {
            if ((this.CheckCustomUpdateOperationCompleted == null)) {
                this.CheckCustomUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCustomUpdateOperationCompleted);
            }
            this.InvokeAsync("CheckCustomUpdate", new object[] {
                        versionNumber,
                        appGUID}, this.CheckCustomUpdateOperationCompleted, userState);
        }
        
        private void OnCheckCustomUpdateOperationCompleted(object arg) {
            if ((this.CheckCustomUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCustomUpdateCompleted(this, new CheckCustomUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppGUIDByAddinName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAppGUIDByAddinName(string addInName) {
            object[] results = this.Invoke("GetAppGUIDByAddinName", new object[] {
                        addInName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppGUIDByAddinNameAsync(string addInName) {
            this.GetAppGUIDByAddinNameAsync(addInName, null);
        }
        
        /// <remarks/>
        public void GetAppGUIDByAddinNameAsync(string addInName, object userState) {
            if ((this.GetAppGUIDByAddinNameOperationCompleted == null)) {
                this.GetAppGUIDByAddinNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppGUIDByAddinNameOperationCompleted);
            }
            this.InvokeAsync("GetAppGUIDByAddinName", new object[] {
                        addInName}, this.GetAppGUIDByAddinNameOperationCompleted, userState);
        }
        
        private void OnGetAppGUIDByAddinNameOperationCompleted(object arg) {
            if ((this.GetAppGUIDByAddinNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppGUIDByAddinNameCompleted(this, new GetAppGUIDByAddinNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetObjectVersionMappings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExcelVersionUpdateMap[] GetObjectVersionMappings(string objectId, int version) {
            object[] results = this.Invoke("GetObjectVersionMappings", new object[] {
                        objectId,
                        version});
            return ((ExcelVersionUpdateMap[])(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectVersionMappingsAsync(string objectId, int version) {
            this.GetObjectVersionMappingsAsync(objectId, version, null);
        }
        
        /// <remarks/>
        public void GetObjectVersionMappingsAsync(string objectId, int version, object userState) {
            if ((this.GetObjectVersionMappingsOperationCompleted == null)) {
                this.GetObjectVersionMappingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectVersionMappingsOperationCompleted);
            }
            this.InvokeAsync("GetObjectVersionMappings", new object[] {
                        objectId,
                        version}, this.GetObjectVersionMappingsOperationCompleted, userState);
        }
        
        private void OnGetObjectVersionMappingsOperationCompleted(object arg) {
            if ((this.GetObjectVersionMappingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectVersionMappingsCompleted(this, new GetObjectVersionMappingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAuthanticationToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getAuthanticationToken(string UserID, string ClientType) {
            object[] results = this.Invoke("getAuthanticationToken", new object[] {
                        UserID,
                        ClientType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAuthanticationTokenAsync(string UserID, string ClientType) {
            this.getAuthanticationTokenAsync(UserID, ClientType, null);
        }
        
        /// <remarks/>
        public void getAuthanticationTokenAsync(string UserID, string ClientType, object userState) {
            if ((this.getAuthanticationTokenOperationCompleted == null)) {
                this.getAuthanticationTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAuthanticationTokenOperationCompleted);
            }
            this.InvokeAsync("getAuthanticationToken", new object[] {
                        UserID,
                        ClientType}, this.getAuthanticationTokenOperationCompleted, userState);
        }
        
        private void OngetAuthanticationTokenOperationCompleted(object arg) {
            if ((this.getAuthanticationTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAuthanticationTokenCompleted(this, new getAuthanticationTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductNameVersionByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductNameVersionByUser(string userName) {
            object[] results = this.Invoke("GetProductNameVersionByUser", new object[] {
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductNameVersionByUserAsync(string userName) {
            this.GetProductNameVersionByUserAsync(userName, null);
        }
        
        /// <remarks/>
        public void GetProductNameVersionByUserAsync(string userName, object userState) {
            if ((this.GetProductNameVersionByUserOperationCompleted == null)) {
                this.GetProductNameVersionByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductNameVersionByUserOperationCompleted);
            }
            this.InvokeAsync("GetProductNameVersionByUser", new object[] {
                        userName}, this.GetProductNameVersionByUserOperationCompleted, userState);
        }
        
        private void OnGetProductNameVersionByUserOperationCompleted(object arg) {
            if ((this.GetProductNameVersionByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductNameVersionByUserCompleted(this, new GetProductNameVersionByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRFQUserRole", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRFQUserRole(string userName) {
            object[] results = this.Invoke("GetRFQUserRole", new object[] {
                        userName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRFQUserRoleAsync(string userName) {
            this.GetRFQUserRoleAsync(userName, null);
        }
        
        /// <remarks/>
        public void GetRFQUserRoleAsync(string userName, object userState) {
            if ((this.GetRFQUserRoleOperationCompleted == null)) {
                this.GetRFQUserRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRFQUserRoleOperationCompleted);
            }
            this.InvokeAsync("GetRFQUserRole", new object[] {
                        userName}, this.GetRFQUserRoleOperationCompleted, userState);
        }
        
        private void OnGetRFQUserRoleOperationCompleted(object arg) {
            if ((this.GetRFQUserRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRFQUserRoleCompleted(this, new GetRFQUserRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ExeChunk {
        
        private string productVersionField;
        
        private string noOfChunksField;
        
        private string chunkNameField;
        
        private byte[] chunkDataField;
        
        /// <remarks/>
        public string productVersion {
            get {
                return this.productVersionField;
            }
            set {
                this.productVersionField = value;
            }
        }
        
        /// <remarks/>
        public string NoOfChunks {
            get {
                return this.noOfChunksField;
            }
            set {
                this.noOfChunksField = value;
            }
        }
        
        /// <remarks/>
        public string chunkName {
            get {
                return this.chunkNameField;
            }
            set {
                this.chunkNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] chunkData {
            get {
                return this.chunkDataField;
            }
            set {
                this.chunkDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ExcelVersionUpdateMap {
        
        private string objectIdField;
        
        private int objectVersionField;
        
        private bool forceUpdateField;
        
        private int versionField;
        
        private string objectNameField;
        
        /// <remarks/>
        public string ObjectId {
            get {
                return this.objectIdField;
            }
            set {
                this.objectIdField = value;
            }
        }
        
        /// <remarks/>
        public int ObjectVersion {
            get {
                return this.objectVersionField;
            }
            set {
                this.objectVersionField = value;
            }
        }
        
        /// <remarks/>
        public bool ForceUpdate {
            get {
                return this.forceUpdateField;
            }
            set {
                this.forceUpdateField = value;
            }
        }
        
        /// <remarks/>
        public int Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectName {
            get {
                return this.objectNameField;
            }
            set {
                this.objectNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ExcelVersionMappings {
        
        private int excelProductVersionMapIdField;
        
        private string mainExcelProductMasterNameField;
        
        private string mainVersionNumberField;
        
        private string compatibleExcelProductMasterNameField;
        
        private string compatibleVersionNumberField;
        
        private int mainExcelProductMasterIdField;
        
        private int compatibleExcelProductMasterIdField;
        
        private bool mainActiveField;
        
        private bool compatibleActiveField;
        
        private System.Nullable<int> mainLastUpdatedByField;
        
        private System.Nullable<int> compatibleLastUpdatedByField;
        
        private System.Nullable<System.DateTime> mainLastUpdatedDateField;
        
        private System.Nullable<System.DateTime> compatibleLastUpdatedDateField;
        
        private System.Nullable<bool> mainVersionActiveField;
        
        private System.Nullable<bool> compatibleVersionActiveField;
        
        private System.Nullable<int> mainVersionLastUpdatedByField;
        
        private System.Nullable<int> compatibleVersionLastUpdatedByField;
        
        private System.Nullable<System.DateTime> mainVersionLastUpdatedDateField;
        
        private System.Nullable<System.DateTime> compatibleVersionLastUpdatedDateField;
        
        private string mainAppGUIDField;
        
        private string compatibleAppGUIDField;
        
        private byte[] excelChunkDataField;
        
        private string setupPathField;
        
        /// <remarks/>
        public int ExcelProductVersionMapId {
            get {
                return this.excelProductVersionMapIdField;
            }
            set {
                this.excelProductVersionMapIdField = value;
            }
        }
        
        /// <remarks/>
        public string MainExcelProductMasterName {
            get {
                return this.mainExcelProductMasterNameField;
            }
            set {
                this.mainExcelProductMasterNameField = value;
            }
        }
        
        /// <remarks/>
        public string MainVersionNumber {
            get {
                return this.mainVersionNumberField;
            }
            set {
                this.mainVersionNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CompatibleExcelProductMasterName {
            get {
                return this.compatibleExcelProductMasterNameField;
            }
            set {
                this.compatibleExcelProductMasterNameField = value;
            }
        }
        
        /// <remarks/>
        public string CompatibleVersionNumber {
            get {
                return this.compatibleVersionNumberField;
            }
            set {
                this.compatibleVersionNumberField = value;
            }
        }
        
        /// <remarks/>
        public int MainExcelProductMasterId {
            get {
                return this.mainExcelProductMasterIdField;
            }
            set {
                this.mainExcelProductMasterIdField = value;
            }
        }
        
        /// <remarks/>
        public int CompatibleExcelProductMasterId {
            get {
                return this.compatibleExcelProductMasterIdField;
            }
            set {
                this.compatibleExcelProductMasterIdField = value;
            }
        }
        
        /// <remarks/>
        public bool MainActive {
            get {
                return this.mainActiveField;
            }
            set {
                this.mainActiveField = value;
            }
        }
        
        /// <remarks/>
        public bool CompatibleActive {
            get {
                return this.compatibleActiveField;
            }
            set {
                this.compatibleActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MainLastUpdatedBy {
            get {
                return this.mainLastUpdatedByField;
            }
            set {
                this.mainLastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CompatibleLastUpdatedBy {
            get {
                return this.compatibleLastUpdatedByField;
            }
            set {
                this.compatibleLastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> MainLastUpdatedDate {
            get {
                return this.mainLastUpdatedDateField;
            }
            set {
                this.mainLastUpdatedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CompatibleLastUpdatedDate {
            get {
                return this.compatibleLastUpdatedDateField;
            }
            set {
                this.compatibleLastUpdatedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> MainVersionActive {
            get {
                return this.mainVersionActiveField;
            }
            set {
                this.mainVersionActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> CompatibleVersionActive {
            get {
                return this.compatibleVersionActiveField;
            }
            set {
                this.compatibleVersionActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MainVersionLastUpdatedBy {
            get {
                return this.mainVersionLastUpdatedByField;
            }
            set {
                this.mainVersionLastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CompatibleVersionLastUpdatedBy {
            get {
                return this.compatibleVersionLastUpdatedByField;
            }
            set {
                this.compatibleVersionLastUpdatedByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> MainVersionLastUpdatedDate {
            get {
                return this.mainVersionLastUpdatedDateField;
            }
            set {
                this.mainVersionLastUpdatedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CompatibleVersionLastUpdatedDate {
            get {
                return this.compatibleVersionLastUpdatedDateField;
            }
            set {
                this.compatibleVersionLastUpdatedDateField = value;
            }
        }
        
        /// <remarks/>
        public string MainAppGUID {
            get {
                return this.mainAppGUIDField;
            }
            set {
                this.mainAppGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string CompatibleAppGUID {
            get {
                return this.compatibleAppGUIDField;
            }
            set {
                this.compatibleAppGUIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] ExcelChunkData {
            get {
                return this.excelChunkDataField;
            }
            set {
                this.excelChunkDataField = value;
            }
        }
        
        /// <remarks/>
        public string SetupPath {
            get {
                return this.setupPathField;
            }
            set {
                this.setupPathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrentMarketDataVolCompletedEventHandler(object sender, GetCurrentMarketDataVolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentMarketDataVolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentMarketDataVolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrentMarketDataPremCompletedEventHandler(object sender, GetCurrentMarketDataPremCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentMarketDataPremCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentMarketDataPremCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCurrentMarketDataStrikeCompletedEventHandler(object sender, GetCurrentMarketDataStrikeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentMarketDataStrikeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentMarketDataStrikeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetGridNodeIDsCompletedEventHandler(object sender, GetGridNodeIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGridNodeIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGridNodeIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SubmitBeastCalcAutoUrlShareCompletedEventHandler(object sender, SubmitBeastCalcAutoUrlShareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitBeastCalcAutoUrlShareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitBeastCalcAutoUrlShareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SubmitLastOpenCalcCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLastOpenCalcCompletedEventHandler(object sender, GetLastOpenCalcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastOpenCalcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastOpenCalcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMainMenuCategoryCompletedEventHandler(object sender, GetMainMenuCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMainMenuCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMainMenuCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubMenuCategoryCompletedEventHandler(object sender, GetSubMenuCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubMenuCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubMenuCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetSubMenuCategoryVendorWiseCompletedEventHandler(object sender, GetSubMenuCategoryVendorWiseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubMenuCategoryVendorWiseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubMenuCategoryVendorWiseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLastOpenAppNameCompletedEventHandler(object sender, GetLastOpenAppNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastOpenAppNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastOpenAppNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Excel_GetMainMenuCategoryCompletedEventHandler(object sender, Excel_GetMainMenuCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Excel_GetMainMenuCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Excel_GetMainMenuCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Excel_GetSubMenuCategoryCompletedEventHandler(object sender, Excel_GetSubMenuCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Excel_GetSubMenuCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Excel_GetSubMenuCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetDirImgSIDNullCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateAuthTokenCompletedEventHandler(object sender, ValidateAuthTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateAuthTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateAuthTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddConnectionToDirForExcelCompletedEventHandler(object sender, AddConnectionToDirForExcelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddConnectionToDirForExcelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddConnectionToDirForExcelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DisableTokenCompletedEventHandler(object sender, DisableTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DisableConnectionCompletedEventHandler(object sender, DisableConnectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableConnectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableConnectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SharedAutoURL_ValidateCompletedEventHandler(object sender, SharedAutoURL_ValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SharedAutoURL_ValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SharedAutoURL_ValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BeastApps_SharedAutoURL_UpdateClickCountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateUserCompletedEventHandler(object sender, ValidateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateUserwithJSONCompletedEventHandler(object sender, ValidateUserwithJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUserwithJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUserwithJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateUserNewCompletedEventHandler(object sender, ValidateUserNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUserNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUserNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendMailForCustomAddInDisabledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ValidateUser_New_UMCompletedEventHandler(object sender, ValidateUser_New_UMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUser_New_UMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUser_New_UMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AutoURL_Validate_User_InfoCompletedEventHandler(object sender, AutoURL_Validate_User_InfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoURL_Validate_User_InfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoURL_Validate_User_InfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LogoutUserForcefullyCompletedEventHandler(object sender, LogoutUserForcefullyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutUserForcefullyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoutUserForcefullyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckLoginPolicyCompletedEventHandler(object sender, CheckLoginPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLoginPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLoginPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void Excel_GetXmlCompletedEventHandler(object sender, Excel_GetXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Excel_GetXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Excel_GetXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLatestVersionIDCompletedEventHandler(object sender, GetLatestVersionIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestVersionIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestVersionIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExeChunk Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExeChunk)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetLatestVersionSetupCompletedEventHandler(object sender, GetLatestVersionSetupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestVersionSetupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestVersionSetupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExeChunk[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExeChunk[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void NotifyDownloadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetUserGroupsCompletedEventHandler(object sender, GetUserGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AutoURL_ValidateCompletedEventHandler(object sender, AutoURL_ValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoURL_ValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoURL_ValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVendorIdCompletedEventHandler(object sender, GetVendorIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AutoLoginByAuthTicketCompletedEventHandler(object sender, AutoLoginByAuthTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoLoginByAuthTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoLoginByAuthTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetExcelPackageLatestVersionCompletedEventHandler(object sender, GetExcelPackageLatestVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExcelPackageLatestVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExcelPackageLatestVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExcelVersionMappings[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExcelVersionMappings[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetExcelPackageLatestVersionByVersionGUIDCompletedEventHandler(object sender, GetExcelPackageLatestVersionByVersionGUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExcelPackageLatestVersionByVersionGUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExcelPackageLatestVersionByVersionGUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExcelVersionMappings[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExcelVersionMappings[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetExcelPackageLatestVersionByVersionGUIDAddinCompletedEventHandler(object sender, GetExcelPackageLatestVersionByVersionGUIDAddinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExcelPackageLatestVersionByVersionGUIDAddinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExcelPackageLatestVersionByVersionGUIDAddinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExcelVersionMappings[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExcelVersionMappings[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetExcelLatestVersionCompletedEventHandler(object sender, GetExcelLatestVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExcelLatestVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExcelLatestVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExcelVersionMappings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExcelVersionMappings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetExcelLatestVersionByVersionGUIDCompletedEventHandler(object sender, GetExcelLatestVersionByVersionGUIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExcelLatestVersionByVersionGUIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExcelLatestVersionByVersionGUIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExcelVersionMappings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExcelVersionMappings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetExcelLatestVersionByVersionGUIDForAddinCompletedEventHandler(object sender, GetExcelLatestVersionByVersionGUIDForAddinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExcelLatestVersionByVersionGUIDForAddinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExcelLatestVersionByVersionGUIDForAddinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExcelVersionMappings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExcelVersionMappings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CheckCustomUpdateCompletedEventHandler(object sender, CheckCustomUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCustomUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCustomUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExcelVersionMappings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExcelVersionMappings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAppGUIDByAddinNameCompletedEventHandler(object sender, GetAppGUIDByAddinNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppGUIDByAddinNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppGUIDByAddinNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetObjectVersionMappingsCompletedEventHandler(object sender, GetObjectVersionMappingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjectVersionMappingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjectVersionMappingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExcelVersionUpdateMap[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExcelVersionUpdateMap[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getAuthanticationTokenCompletedEventHandler(object sender, getAuthanticationTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAuthanticationTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAuthanticationTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetProductNameVersionByUserCompletedEventHandler(object sender, GetProductNameVersionByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductNameVersionByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductNameVersionByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetRFQUserRoleCompletedEventHandler(object sender, GetRFQUserRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRFQUserRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRFQUserRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591